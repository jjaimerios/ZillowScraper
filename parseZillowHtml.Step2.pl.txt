#!/usr/bin/perl

# This script will read the raw html generated by zillowScraper.py
# It will grab the glob of search results contained in a script tag at the bottom of each page
# It will clean things a bit and write a cleaner file of search results

# Library to enable copying/moving files
use File::Copy;

# Library to enable separating path and file name
use File::Basename;

# Set temp work and output directories (these should really go in prop file)
my $workDir = '../Work/';
my $outDir = '../Ingest/';

# List on all files in Lake directory
my @fileList = glob('../Lake/*');

# Parse through every html file in the "Lake"
foreach my $htmlFile( @fileList )
{
   #print "File: $htmlFile\n";

   # Move file so other runs don't see it to avoid dupe runs
   move( $htmlFile, $workDir ) or next;

   # Parse HTML file
   parseHtml( $workDir, basename( $htmlFile ), $outDir );
}

exit 0;

# Function to read through raw html and get "homeInfo" with house results
sub parseHtml
{
   my $fileDir = shift;
   my $workFile = shift;
   my $outputDir = shift;

   # Open input and output files
   open(ifh, $fileDir . basename($workFile))
      or die "Cannot open input in $fileDir" . basename( $workFile ) . "$!\n";

   open(ofh, '>', $outputDir . basename($workFile))
      or die "Cannot open output in $outputDir " . basename( $workFile ) . "$!\n";

   # Parse through each line of input file
   #while( my $htmlLine = $ifh )
   while( <ifh> )
   {
      #print( $htmlLine );
      #if ( $_ =~ /homeInfo/)
      #{
      #   #print( $_ );
      #   my @splitHtml = split(/homeInfo/, $_ );
      #
      #   foreach $entry(@splitHtml)
      #   {
      #      print ofh $entry . "\n";
      #   }
      #}

      # Only grab glob of text with "homeInfo" data
      if ( $_ =~ /homeInfo/)
      {
         #print( $_ );
	 # Split line on homeInfo to separate each property into its own line
         my @splitHtml = split(/homeInfo/, $_ );

	 # Parse through each property
         foreach $entry(@splitHtml)
         {
            # Split each property record on "zpid" ID
	    # This chunk will contain the data we want - addr, price, prop info
            my @split2 = split(/zpid/, $entry );

	    # Only write portion of property rec with the info we want
	    # streetAddress will be a unique key we can search for within that
            foreach $entry2(@split2)
            {
                if ($entry2 =~ /streetAddress/)
                {
                    print ofh '{"zpid' . $entry2 . "\n";
                }
            }
         }
      }
   }
   close ifh;
   close ofh;
}

exit 0;
